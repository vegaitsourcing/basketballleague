@using LZRNS.Models.AdditionalModels
@using Constants = LZRNS.Common.Constants
@inherits UmbracoViewPage<StatisticsModel>

<main class="main" data-template-name="statistics">
    @{Html.RenderAction<SharedController>(c => c.Banner(null), Model.Banner);}
    <div class="statistic-page">
        <div class="wrap">
            <div class="title">
                <h2>@Model.Title</h2>
            </div>
            @if (Model.Seasons != null && Model.Seasons.Any())
            {
                <div class="statistic-top">
                    <div class="left">
                        <button type="button" class="btn @(Model.SelectedSeasonYear != Model.Seasons.First().SeasonStartYear ? "active" : string.Empty)" all-seasons>@UmbracoDictionary.Stats.Filter.All</button>
                        <button type="button" class="btn @(Model.SelectedSeasonYear == Model.Seasons.First().SeasonStartYear ? "active" : string.Empty)" active-season>@UmbracoDictionary.Stats.Filter.Active</button>
                        <select seasons id="statistics-season-filter">
                            @foreach (var season in Model.Seasons)
                            {
                                <option value="@season.SeasonStartYear" data-query="@season.SeasonStartYear.ToSeasonQueryParameter()" @(season.SeasonStartYear == Model.SelectedSeasonYear ? "selected" : string.Empty)>@season.Name</option>
                            }
                        </select>
                    </div>
                    <div class="right">
                        <button type="button" class="btn @(Model.Category == TopStatisticCategories.Total ? "active" : string.Empty)" category data-query="@TopStatisticCategories.Total.ToQueryParameter()">@UmbracoDictionary.Stats.Filter.Categories.Totals</button>
                        <button type="button" class="btn @(Model.Category == TopStatisticCategories.Average ? "active" : string.Empty)" category data-query="@TopStatisticCategories.Average.ToQueryParameter()">@UmbracoDictionary.Stats.Filter.Categories.Averages</button>
                        <button type="button" class="btn @(Model.Category == TopStatisticCategories.PerMinute ? "active" : string.Empty)" category data-query="@TopStatisticCategories.PerMinute.ToQueryParameter()">@UmbracoDictionary.Stats.Filter.Categories.PerMinute</button>
                    </div>
                </div>
                Html.RenderAction<ManagementHtmlController>(c => c.TopStatsLeagues(0, Model.Category), Model.SelectedSeasonYear, Model.Category);
                <div class="popup-overlay" data-popup-window="result-popup">
                    <div class="popup">
                        <button type="button" class="btn-close js-close-popup"><span class="font-ico-x"></span></button>
                        <div class="popup-placeholder">
                            <!-- this is dynamically populated -->
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</main>

@section additionalFooter{
    <script>
        $(function() {
            $("#statistics-season-filter").change(function() {
                var year = $(this).val();
                var seasonQueryParamName = "@Constants.RequestParameters.StatisticsSeason";
                var newSeason = `${seasonQueryParamName}=${year}`;
                var seasonRegex = new RegExp(`${seasonQueryParamName}=\\d*`);

                var search = window.location.search;
                if (seasonRegex.test(search)) {

                    window.location.search = search.replace(seasonRegex, newSeason);
                } else {
                    window.location.search += `&${newSeason}`;
                }
            });
        })
    </script>
}